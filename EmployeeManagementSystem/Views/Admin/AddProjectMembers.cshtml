@model EmployeeManagementSystem.Models.ProjectMembers
@{
    ViewBag.Title = "Add Project Members";

    var emp = (EmployeeManagementSystem.ViewModels.EmployeeIdNameViewModel)ViewData["EmpIdNameList"];
    var proj = (EmployeeManagementSystem.Models.Project)ViewData["ProjectsList"];



    var EmployeeOptions = new List<SelectListItem>();
    foreach (var item in emp.EmployeeIdNameList)
    {
        EmployeeOptions.Add(new SelectListItem() { Text = item.FirstName, Value = item.EmployeeId.ToString() });

    }


    var ProjectOptions = new List<SelectListItem>();
    foreach (var item in proj.ProjectList)
    {
        ProjectOptions.Add(new SelectListItem() { Text = item.ProjectName, Value = item.ProjectId.ToString() });
    }
}

@if (((Session["role"]).ToString()) == "Admin")
{
   
    
@(Html.BeginForm("SaveProjectMember", "Admin", Model))
 {
    @Html.AntiForgeryToken()


  <div class="form-horizontal mx-auto align-center  ">
    <h4 class="addEmp">Employee Details</h4>
    <hr id="addemphr" />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group col-md-6">
        @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Your Gender " } })
            *@
            @Html.DropDownListFor(model => model.EmployeeId, EmployeeOptions, htmlAttributes: new { @class = "text-center Role-Down " })

            @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group col-md-6">
        @Html.LabelFor(model => model.ProjectId, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Your Gender " } })
            *@
            @Html.DropDownListFor(model => model.ProjectId, ProjectOptions, htmlAttributes: new { @class = "text-center Role-Down " })

            @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })

        </div>


                <div class="form-group col-md-8  row justify-content-md-end">
                    <div class="col-md-2 col-sm-10 col ">
                        <input id="emp-create-btn" type="submit" value="Create" class="btn-primary btn-default " />
                    </div>

                    <div class="col-md-3 col-sm-5 " id="Emp-form-back-list">
                        @Html.ActionLink("Back to List", "Index")
                    </div>

                </div>

            </div>
        </div>

    }
}



    </div>
  </div>

 }

}

